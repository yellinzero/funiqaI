[tool.poetry]
name = "funiq-ai-server"
version = "0.1.0"
readme = "README.md"
package-mode = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


############################################################
# [ Ruff ] ruff configuration
############################################################
[tool.ruff]
# Exclude certain directories from linting, such as migration files, build artifacts, and cache
exclude = [
    "migrations/*",
    "__pycache__/*",
    "build/*",
    "dist/*",
]
# Maximum line length for the project (commonly 88 or 120 characters)
line-length = 120

[tool.ruff.lint]
# Enable preview rules for new and experimental linting features
preview = true

# Enable specific rulesets and categories for linting
select = [
    "B",    # flake8-bugbear: Detect common code issues and potential bugs
    "C4",   # flake8-comprehensions: Optimize list, set, and dict comprehensions
    "E",    # pycodestyle: Basic PEP 8 style rules
    "F",    # pyflakes: Check for unused variables, imports, etc.
    "FURB", # refurb: Suggest better Python code patterns
    "I",    # isort: Ensure consistent import order
    "N",    # pep8-naming: Enforce naming conventions
    "PT",   # flake8-pytest-style: Improve pytest structure and readability
    "PLC",  # pylint-compatible: Provide enhanced rule suggestions
    "RUF",  # ruff-specific: Ruffâ€™s custom rules
    "S",    # bandit: Security linting for common Python vulnerabilities
    "SIM",  # flake8-simplify: Suggest simpler alternatives for complex logic
    "UP",   # pyupgrade: Recommend modern Python syntax
    "PLR0402", # manual-from-import
    "PLR1711", # useless-return
    "PLR1714", # repeated-equality-comparison
    "W191", # tab-indentation
    "W605", # invalid-escape-sequence
]

# Ignore specific rules based on project requirements
ignore = [
    "E402", # Allow imports not placed at the top of the file (useful for dynamic imports)
    "E712", # Allow comparisons to True/False (sometimes used for dynamic conditions)
    "F841", # Ignore unused variables (useful for debugging or placeholders)
    "SIM102", # Avoid collapsing independent if-else statements (retain clarity)
    "SIM117", # Allow multiple with statements for better readability
    "B006", # Ignore mutable argument defaults in certain cases
    "PT011", # Allow broad exception handling in pytest raises
  
]

# Per-file specific ignores for project-specific exceptions
[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # Allow unused imports in __init__.py for module initialization
    "F811", # Allow redefinition of imports in __init__.py
]
"tests/*" = [
    "F401", # Ignore unused imports in test files
    "F811", # Allow redefinition of variables in test files
    "S101", # Use assert instead of raise
]
"configs/*" = [
    "N802", # Ignore invalid function names in config files
]

# Extend Pyflakes to handle additional generic patterns
[tool.ruff.lint.pyflakes]
extend-generics = [
    "_pytest.monkeypatch", # Recognize pytest's monkeypatch utility
]

# Format-related settings
[tool.ruff.format]
# Exclude specific directories from automatic formatting
exclude = [
    "migrations/*",
]

[tool.poetry.group.dev.dependencies]
dotenv-linter = "~0.5.0"
ruff = "~0.6.9"
coverage = "~7.2.4"
pytest = "~8.3.2"
pytest-benchmark = "~4.0.0"
pytest-env = "~1.1.3"
pytest-mock = "~3.14.0"
pytest-asyncio = "^0.25.2"
greenlet = "^3.1.1"


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
python-dotenv = "1.0.0"
pydantic = {extras = ["email"], version = "^2.10.2"}
pydantic-settings = "~2.6.0"
fastapi = {extras = ["standard"], version = "^0.115.6"}
uvicorn = "^0.32.1"
sqlalchemy = "^2.0.36"
orjson = "^3.10.12"
loguru = "^0.7.2"
sqlalchemy-utils = "^0.41.2"
bcrypt = "^4.2.1"
redis = "^5.2.0"
asyncio = "^3.4.3"
inflect = "^7.4.0"
fastapi-async-sqlalchemy = "^0.6.1"
stringcase = "^1.2.0"
passlib = "^1.7.4"
python-jose = "^3.3.0"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.10"
alembic = "^1.14.0"
celery = "^5.4.0"
pytz = "^2024.2"
jinja2 = "^3.1.5"
premailer = "^3.10.0"
aiosqlite = "^0.20.0"
sentry-sdk = "^2.20.0"
